@{
	const string downwardClassName = "ti-arrow-down text-light";
	const string upwardClassName = "ti-arrow-up text-light";
}

<div class="box">
	<div class="box-body">
		<div class="d-flex justify-content-between align-items-center">
			<h4>@TimePeriod</h4>
			<h4>@(GrowthRate.FormatForUI())%</h4>
		</div>
		<h1 class="my-40">@CurrentValue.FormatForUI()</h1>
		<div class="d-flex justify-content-between align-items-center">
			<h5 class="mb-0">@MetricName</h5>
			<h5 class="mb-0"><i class=@(IsUpwardMetric? upwardClassName: downwardClassName)></i></h5>
		</div>
	</div>
</div>

@code {
    [Parameter]
    public string TimePeriod { get; set; } = null!;
    [Parameter]
    public double GrowthRate { get; set; }
	[Parameter]
	public decimal CurrentValue { get; set; }
	[Parameter]
	public string MetricName { get; set; } = null!;
	[Parameter]
	public bool IsUpwardMetric { get; set; }
}
